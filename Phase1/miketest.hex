@0 02000054 // ld r4, 0x54     
@1 02800055 // ld r5, 0x55
@2 12A00054 // st 0x54(R4), R5   
@3 09A00008 // ldi r3, 0x08(r4)  
@4 0900000A // ldi R2, 10 
@5 09800005 // ldi R3, 5
@6 79180000 // div R2, R3
@7 63980002 // addi r7, r3, 2    
@8 6C380006 // andi r8, r7, 6    
@9 74C00070 // ori r9, r8, 0x70 
@A 1D4C0000 // add r10, r9, r8   
@B 25C48000 // sub r11, r8, r9

// Test SHR (Shift Right)
@C 38280002 // shr r5, r5, 2     // Shift r5 right by 2 (0x21 >> 2 = 0x08)

// Test SHRA (Shift Right Arithmetic)
@D 3C280002 // shra r5, r5, 2    // Shift r5 right arithmetic by 2 

// Test SHL (Shift Left)
@E 40200001 // shl r4, r4, 1     // Shift r4 left by 1 (0x97 << 1 = 0x12E)

// Test ROT (Rotate Right)
@F 34280002 // ror r5, r5, 2     // Rotate r5 right by 2

// Test ROL (Rotate Left)
@10 38280002 // rol r5, r5, 2    // Rotate r5 left by 2

// Test MUL
@11 81140000 // mul r2, r3       // Multiply r2 and r3 (10 * 5 = 50), result in HI:LO

// Test MFHI/MFLO
@12 CD000000 // mfhi r10         // Move HI register to r10
@13 D1800000 // mflo r11         // Move LO register to r11

// Test JAL
@14 B1800020 // jal r3, 0x20     // Jump to address 0x20, save return address in r3

// NOP
@15 DF800000 // nop              // No operation

// Test JR (at address 0x20)
@20 B1800000 // jr r3            // Jump back to return address in r3

// Test HALT
@21 DFC00000 // halt             // Halt execution

@22 00000000
@23 00000000
@24 00000000
@25 00000000
@26 00000000
@27 00000000
@28 00000000
@29 00000000
@2A 00000000
@2B 00000000
@2C 00000000
@2D 00000000
@2E 00000000
@2F 00000000
@30 00000000
@31 00000000
@32 00000000
@33 00000000
@34 00000000
@35 00000000
@36 00000000
@37 00000000
@38 00000000
@39 00000000
@3A 00000000
@3B 00000000
@3C 00000000
@3D 00000000
@3E 00000000
@3F 00000000
@40 00000000
@41 00000000
@42 00000000
@43 00000000
@44 00000000
@45 00000000
@46 00000000
@47 00000000
@48 00000000
@49 00000000
@4A 00000000
@4B 00000000
@4C 00000000
@4D 00000000
@4E 00000000
@4F 00000000
@50 00000000
@51 00000000
@52 00000000
@53 00000000
@54 00000097 // Value loaded into r4
@55 00000021 // Value loaded into r5
@56 00000000
@57 00000000
@58 00000321
@59 00000000
@5A 00000000
@5B 00000000
@5C 00000000
@5D 00000000
@5E 00000000
@5F 00000000
@60 00000000
@61 00000000
@62 00000000
@63 00000000
@64 00000000
@65 00000000
@66 00000000
